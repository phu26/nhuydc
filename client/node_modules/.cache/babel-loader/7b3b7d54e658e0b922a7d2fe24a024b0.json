{"ast":null,"code":"var _jsxFileName = \"E:\\\\nhuydc\\\\client\\\\src\\\\pages\\\\login\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useRef, React, useCallback } from \"react\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport \"./login.css\";\nimport { getAuth } from \"../../redux/actions\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport queryString from 'query-string';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login(props) {\n  _s();\n\n  const value = queryString.parse('http://www.google.com.au?token=123');\n  const token = value.token;\n  console.log('token', token);\n  const {\n    isFetching\n  } = false;\n  const dispatch = useDispatch();\n  const handleclick = useCallback(() => {\n    console.log(\"df\");\n    dispatch(getAuth.getAuthRequest());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"loginButton\",\n      type: \"submit\",\n      onClick: handleclick,\n      disabled: isFetching,\n      children: isFetching ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"white\",\n        size: \"20px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this) : \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 4\n  }, this);\n}\n\n_s(Login, \"aJC9ReIDPEsN6kkXSt2Up8/oNBw=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useContext","useRef","React","useCallback","CircularProgress","getAuth","useSelector","useDispatch","queryString","Login","props","value","parse","token","console","log","isFetching","dispatch","handleclick","getAuthRequest"],"sources":["E:/nhuydc/client/src/pages/login/index.js"],"sourcesContent":["import { useContext, useRef,React,useCallback } from \"react\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport \"./login.css\";\r\nimport { getAuth } from \"../../redux/actions\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport queryString from 'query-string';\r\n\r\nexport default function Login(props) {\r\n  const value=queryString.parse('http://www.google.com.au?token=123');\r\n  const token=value.token;\r\n  console.log('token',token);\r\n    const {isFetching} = false; \r\n    const dispatch = useDispatch();\r\n    const handleclick = useCallback(() => {\r\n       console.log(\"df\");\r\n        dispatch(getAuth.getAuthRequest());\r\n        \r\n       }, []);\r\n    return (\r\n   <div>\r\n     <button className=\"loginButton\" type=\"submit\" onClick={handleclick} disabled={isFetching}>\r\n              {isFetching ? (\r\n                <CircularProgress color=\"white\" size=\"20px\" />\r\n              ) : (\r\n                \"Log In\"\r\n              )}\r\n            </button>\r\n   </div>\r\n           \r\n           \r\n  );\r\n}"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA4BC,KAA5B,EAAkCC,WAAlC,QAAqD,OAArD;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,OAAO,aAAP;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,WAAP,MAAwB,cAAxB;;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;EAAA;;EACnC,MAAMC,KAAK,GAACH,WAAW,CAACI,KAAZ,CAAkB,oCAAlB,CAAZ;EACA,MAAMC,KAAK,GAACF,KAAK,CAACE,KAAlB;EACAC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,KAApB;EACE,MAAM;IAACG;EAAD,IAAe,KAArB;EACA,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;EACA,MAAMW,WAAW,GAAGf,WAAW,CAAC,MAAM;IACnCW,OAAO,CAACC,GAAR,CAAY,IAAZ;IACCE,QAAQ,CAACZ,OAAO,CAACc,cAAR,EAAD,CAAR;EAEA,CAJ2B,EAIzB,EAJyB,CAA/B;EAKA,oBACD;IAAA,uBACE;MAAQ,SAAS,EAAC,aAAlB;MAAgC,IAAI,EAAC,QAArC;MAA8C,OAAO,EAAED,WAAvD;MAAoE,QAAQ,EAAEF,UAA9E;MAAA,UACUA,UAAU,gBACT,QAAC,gBAAD;QAAkB,KAAK,EAAC,OAAxB;QAAgC,IAAI,EAAC;MAArC;QAAA;QAAA;QAAA;MAAA,QADS,GAGT;IAJX;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADC;AAaH;;GAxBuBP,K;UAKHF,W;;;KALGE,K"},"metadata":{},"sourceType":"module"}